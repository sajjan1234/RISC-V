$date
	Sun Dec 10 14:00:34 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RISC_V_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module RISC_V $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 # SrcB [31:0] $end
$var wire 1 $ ResultSrc $end
$var wire 32 % Result [31:0] $end
$var wire 1 & RegWrite $end
$var wire 32 ' ReadData [31:0] $end
$var wire 32 ( RD_Instr [31:0] $end
$var wire 32 ) RD2_Top [31:0] $end
$var wire 32 * RD1_Top [31:0] $end
$var wire 32 + PC_Top [31:0] $end
$var wire 32 , PCPlus4 [31:0] $end
$var wire 1 - MemWrite $end
$var wire 32 . Imm_Ext_Top [31:0] $end
$var wire 2 / ImmSrc [1:0] $end
$var wire 1 0 ALUSrc $end
$var wire 32 1 ALUResult [31:0] $end
$var wire 3 2 ALUControl_Top [2:0] $end
$scope module ALU $end
$var wire 1 3 Carry $end
$var wire 1 4 cout $end
$var wire 1 5 Zero $end
$var wire 1 6 Negative $end
$var wire 32 7 B [31:0] $end
$var wire 3 8 ALUControl [2:0] $end
$var wire 32 9 A [31:0] $end
$var reg 32 : Result [31:0] $end
$upscope $end
$scope module Control_Unit_Top $end
$var wire 7 ; Op [6:0] $end
$var wire 3 < funct3 [2:0] $end
$var wire 7 = funct7 [6:0] $end
$var wire 1 $ ResultSrc $end
$var wire 1 & RegWrite $end
$var wire 1 - MemWrite $end
$var wire 2 > ImmSrc [1:0] $end
$var wire 1 ? Branch $end
$var wire 1 0 ALUSrc $end
$var wire 2 @ ALUOp [1:0] $end
$var wire 3 A ALUControl [2:0] $end
$scope module ALU_Decoder $end
$var wire 3 B funct3 [2:0] $end
$var wire 7 C funct7 [6:0] $end
$var wire 2 D ALUOp [1:0] $end
$var reg 3 E ALUControl [2:0] $end
$upscope $end
$scope module Main_Decoder $end
$var wire 7 F Op [6:0] $end
$var reg 2 G ALUOp [1:0] $end
$var reg 1 0 ALUSrc $end
$var reg 1 ? Branch $end
$var reg 2 H ImmSrc [1:0] $end
$var reg 1 - MemWrite $end
$var reg 1 & RegWrite $end
$var reg 1 $ ResultSrc $end
$upscope $end
$upscope $end
$scope module Data_Memory $end
$var wire 32 I A [31:0] $end
$var wire 32 J RD [31:0] $end
$var wire 1 - WE $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 K WD [31:0] $end
$var integer 32 L i [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 M RD [31:0] $end
$var wire 32 N A [31:0] $end
$upscope $end
$scope module Mux_DataMemory_to_Register $end
$var wire 32 O a [31:0] $end
$var wire 32 P b [31:0] $end
$var wire 1 $ s $end
$var reg 32 Q c [31:0] $end
$upscope $end
$scope module Mux_Register_to_ALU $end
$var wire 1 0 s $end
$var wire 32 R b [31:0] $end
$var wire 32 S a [31:0] $end
$var reg 32 T c [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 U PC_Next [31:0] $end
$var reg 32 V PC [31:0] $end
$upscope $end
$scope module PC_Adder $end
$var wire 32 W a [31:0] $end
$var wire 32 X b [31:0] $end
$var wire 32 Y c [31:0] $end
$upscope $end
$scope module Register_File $end
$var wire 5 Z A1 [4:0] $end
$var wire 5 [ A2 [4:0] $end
$var wire 5 \ A3 [4:0] $end
$var wire 32 ] WD3 [31:0] $end
$var wire 1 & WE3 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 32 ^ RD2 [31:0] $end
$var wire 32 _ RD1 [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 2 ` ImmSrc [1:0] $end
$var wire 32 a In [31:0] $end
$var reg 32 b Imm_Ext [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
b1 X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
x?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
x5
x4
x3
bx 2
bx 1
x0
bx /
bx .
x-
bx ,
bx +
bx *
bx )
bx (
bx '
x&
bx %
x$
bx #
0"
1!
$end
#5
0!
#10
b1 ,
b1 U
b1 Y
b0 +
b0 N
b0 V
b0 W
1"
1!
#15
0!
#20
03
04
06
05
b10110 %
b10110 Q
b10110 ]
b0 '
b0 J
b0 P
b10110 1
b10110 :
b10110 I
b10110 O
b11100 #
b11100 T
b0 2
b0 8
b0 A
b0 E
b0 @
b0 D
b0 G
0&
b1 /
b1 >
b1 H
b1 `
10
1-
0$
0?
b110 )
b110 7
b110 K
b110 S
b110 ^
b10000 *
b10000 9
b10000 _
b11100 .
b11100 R
b11100 b
b100011 =
b100011 C
b10 <
b10 B
b100011 ;
b100011 F
b11100 \
b110 [
b1010 Z
b10 ,
b10 U
b10 Y
b11001010010111000100011 (
b11001010010111000100011 M
b11001010010111000100011 a
b1 +
b1 N
b1 V
b1 W
b100000000 L
1!
#25
0!
#30
b0 %
b0 Q
b0 ]
b111000 1
b111000 :
b111000 I
b111000 O
b11100 #
b11100 T
1&
b0 /
b0 >
b0 H
b0 `
0-
1$
b101000 )
b101000 7
b101000 K
b101000 S
b101000 ^
b11100 .
b11100 R
b11100 b
b11 =
b11 C
b11 ;
b11 F
b110 \
b11100 [
b11 ,
b11 U
b11 Y
b1110001010010001100000011 (
b1110001010010001100000011 M
b1110001010010001100000011 a
b10 +
b10 N
b10 V
b10 W
b100000000 L
1!
#35
0!
#40
b101 %
b101 Q
b101 ]
b101 1
b101 :
b101 I
b101 O
b101 #
b101 T
b10 @
b10 D
b10 G
0$
b101 )
b101 7
b101 K
b101 S
b101 ^
b0 *
b0 9
b0 _
b101 .
b101 R
b101 b
b10011 =
b10011 C
b0 <
b0 B
b10011 ;
b10011 F
b10 \
b101 [
b0 Z
b100 ,
b100 U
b100 Y
b10100000000000100010011 (
b10100000000000100010011 M
b10100000000000100010011 a
b11 +
b11 N
b11 V
b11 W
b100000000 L
1!
#45
0!
#50
b10010 %
b10010 Q
b10010 ]
b10010 1
b10010 :
b10010 I
b10010 O
b1100 #
b1100 T
b10010 )
b10010 7
b10010 K
b10010 S
b10010 ^
b1100 .
b1100 R
b1100 b
b11 \
b1100 [
b101 ,
b101 U
b101 Y
b110000000000000110010011 (
b110000000000000110010011 M
b110000000000000110010011 a
b100 +
b100 N
b100 V
b100 W
b100000000 L
1!
#55
0!
#60
b110101 %
b110101 Q
b110101 ]
b110101 1
b110101 :
b110101 I
b110101 O
b11111111111111111111111111110111 #
b11111111111111111111111111110111 T
b100011 )
b100011 7
b100011 K
b100011 S
b100011 ^
b10010 *
b10010 9
b10010 _
b11111111111111111111111111110111 .
b11111111111111111111111111110111 R
b11111111111111111111111111110111 b
b111 \
b10111 [
b11 Z
b110 ,
b110 U
b110 Y
b11111111011100011000001110010011 (
b11111111011100011000001110010011 M
b11111111011100011000001110010011 a
b101 +
b101 N
b101 V
b101 W
b100000000 L
1!
#65
0!
#70
14
b101 #
b101 T
b11 2
b11 8
b11 A
b11 E
00
b101 )
b101 7
b101 K
b101 S
b101 ^
b110101 *
b110101 9
b110101 _
b10 .
b10 R
b10 b
b110011 =
b110011 C
b110 <
b110 B
b110011 ;
b110011 F
b100 \
b10 [
b111 Z
b111 ,
b111 U
b111 Y
b1000111110001000110011 (
b1000111110001000110011 M
b1000111110001000110011 a
b110 +
b110 N
b110 V
b110 W
b100000000 L
1!
#75
0!
#80
04
b10000 %
b10000 Q
b10000 ]
b10000 1
b10000 :
b10000 I
b10000 O
b110101 #
b110101 T
b10 2
b10 8
b10 A
b10 E
b110101 )
b110101 7
b110101 K
b110101 S
b110101 ^
b10010 *
b10010 9
b10010 _
b100 .
b100 R
b100 b
b111 <
b111 B
b101 \
b100 [
b11 Z
b1000 ,
b1000 U
b1000 Y
b10000011111001010110011 (
b10000011111001010110011 M
b10000011111001010110011 a
b111 +
b111 N
b111 V
b111 W
b100000000 L
1!
#85
0!
#90
b1000101 %
b1000101 Q
b1000101 ]
b1000101 1
b1000101 :
b1000101 I
b1000101 O
b0 2
b0 8
b0 A
b0 E
b10000 *
b10000 9
b10000 _
b0 <
b0 B
b101 Z
b1001 ,
b1001 U
b1001 Y
b10000101000001010110011 (
b10000101000001010110011 M
b10000101000001010110011 a
b1000 +
b1000 N
b1000 V
b1000 W
b100000000 L
1!
#95
0!
#100
13
14
b10000 %
b10000 Q
b10000 ]
b1 2
b1 8
b1 A
b1 E
b1 @
b1 D
b1 G
0&
b10 /
b10 >
b10 H
b10 `
1?
b10000 1
b10000 :
b10000 I
b10000 O
b110000 .
b110000 R
b110000 b
b1100011 =
b1100011 C
b1100011 ;
b1100011 F
b10000 \
b111 [
b1000101 *
b1000101 9
b1000101 _
b1010 ,
b1010 U
b1010 Y
b10011100101000100001100011 (
b10011100101000100001100011 M
b10011100101000100001100011 a
b1001 +
b1001 N
b1001 V
b1001 W
b100000000 L
1!
#105
0!
#110
03
04
b110101 %
b110101 Q
b110101 ]
b110101 1
b110101 :
b110101 I
b110101 O
b0 #
b0 T
b0 )
b0 7
b0 K
b0 S
b0 ^
b110101 *
b110101 9
b110101 _
b1000 .
b1000 R
b1000 b
b1000 \
b0 [
b100 Z
b1011 ,
b1011 U
b1011 Y
b100000010001100011 (
b100000010001100011 M
b100000010001100011 a
b1010 +
b1010 N
b1010 V
b1010 W
b100000000 L
1!
#115
0!
#120
b0 %
b0 Q
b0 ]
15
b0 1
b0 :
b0 I
b0 O
b0 #
b0 T
b0 2
b0 8
b0 A
b0 E
b10 @
b10 D
b10 G
1&
b0 /
b0 >
b0 H
b0 `
10
0?
b0 *
b0 9
b0 _
b0 .
b0 R
b0 b
b10011 =
b10011 C
b10011 ;
b10011 F
b101 \
b0 Z
b1100 ,
b1100 U
b1100 Y
b1010010011 (
b1010010011 M
b1010010011 a
b1011 +
b1011 N
b1011 V
b1011 W
b100000000 L
1!
#125
0!
#130
b110101 %
b110101 Q
b110101 ]
05
b110101 1
b110101 :
b110101 I
b110101 O
00
b110101 *
b110101 9
b110101 _
b101 .
b101 R
b101 b
b110011 =
b110011 C
b110011 ;
b110011 F
b111 \
b101 [
b100 Z
b1101 ,
b1101 U
b1101 Y
b10100100000001110110011 (
b10100100000001110110011 M
b10100100000001110110011 a
b1100 +
b1100 N
b1100 V
b1100 W
b100000000 L
1!
#135
0!
#140
13
14
b111010 %
b111010 Q
b111010 ]
b111010 1
b111010 :
b111010 I
b111010 O
b101 #
b101 T
b101 )
b101 7
b101 K
b101 S
b101 ^
b10000000010 .
b10000000010 R
b10000000010 b
b10 [
b111 Z
b1110 ,
b1110 U
b1110 Y
b1000000001000111000001110110011 (
b1000000001000111000001110110011 M
b1000000001000111000001110110011 a
b1101 +
b1101 N
b1101 V
b1101 W
b100000000 L
1!
#145
0!
#150
03
04
b1001100 %
b1001100 Q
b1001100 ]
b1010100 #
b1010100 T
b0 @
b0 D
b0 G
0&
b1 /
b1 >
b1 H
b1 `
10
1-
b111010 )
b111010 7
b111010 K
b111010 S
b111010 ^
b1001100 1
b1001100 :
b1001100 I
b1001100 O
b1010100 .
b1010100 R
b1010100 b
b100011 =
b100011 C
b10 <
b10 B
b100011 ;
b100011 F
b10100 \
b111 [
b11 Z
b10010 *
b10010 9
b10010 _
b1111 ,
b1111 U
b1111 Y
b100011100011010101000100011 (
b100011100011010101000100011 M
b100011100011010101000100011 a
b1110 +
b1110 N
b1110 V
b1110 W
b100000000 L
1!
#155
0!
#160
15
b0 %
b0 Q
b0 ]
b0 1
b0 :
b0 I
b0 O
b1100000 #
b1100000 T
1&
b0 /
b0 >
b0 H
b0 `
0-
1$
b0 )
b0 7
b0 K
b0 S
b0 ^
b0 *
b0 9
b0 _
b1100000 .
b1100000 R
b1100000 b
b11 =
b11 C
b11 ;
b11 F
b10 \
b0 [
b0 Z
b10000 ,
b10000 U
b10000 Y
b110000000000010000100000011 (
b110000000000010000100000011 M
b110000000000010000100000011 a
b1111 +
b1111 N
b1111 V
b1111 W
b100000000 L
1!
#165
0!
#170
b0 #
b0 T
b10 @
b10 D
b10 G
00
0$
b101 .
b101 R
b101 b
b110011 =
b110011 C
b0 <
b0 B
b110011 ;
b110011 F
b1001 \
b101 [
b10 Z
b10001 ,
b10001 U
b10001 Y
b10100010000010010110011 (
b10100010000010010110011 M
b10100010000010010110011 a
b10000 +
b10000 N
b10000 V
b10000 W
b100000000 L
1!
#175
0!
#180
b1000 %
b1000 Q
b1000 ]
05
b1000 1
b1000 :
b1000 I
b1000 O
b1000 #
b1000 T
b0 @
b0 D
b0 G
0&
b1000 )
b1000 7
b1000 K
b1000 S
b1000 ^
b1000 .
b1000 R
b1000 b
b1101111 =
b1101111 C
b1101111 ;
b1101111 F
b11 \
b1000 [
b0 Z
b10010 ,
b10010 U
b10010 Y
b100000000000000111101111 (
b100000000000000111101111 M
b100000000000000111101111 a
b10001 +
b10001 N
b10001 V
b10001 W
b100000000 L
1!
#185
0!
#190
b1 %
b1 Q
b1 ]
b1 1
b1 :
b1 I
b1 O
b1 #
b1 T
b10 @
b10 D
b10 G
1&
10
b1 )
b1 7
b1 K
b1 S
b1 ^
b1 .
b1 R
b1 b
b10011 =
b10011 C
b10011 ;
b10011 F
b10 \
b1 [
b10011 ,
b10011 U
b10011 Y
b100000000000100010011 (
b100000000000100010011 M
b100000000000100010011 a
b10010 +
b10010 N
b10010 V
b10010 W
b100000000 L
1!
#195
0!
#200
b0 #
b0 T
00
b0 )
b0 7
b0 K
b0 S
b0 ^
b1 *
b1 9
b1 _
b1001 .
b1001 R
b1001 b
b110011 =
b110011 C
b110011 ;
b110011 F
b1001 [
b10 Z
b10100 ,
b10100 U
b10100 Y
b100100010000000100110011 (
b100100010000000100110011 M
b100100010000000100110011 a
b10011 +
b10011 N
b10011 V
b10011 W
0"
b100000000 L
1!
#205
0!
#210
x3
x4
x6
bx %
bx Q
bx ]
x5
bx '
bx J
bx P
bx 1
bx :
bx I
bx O
bx #
bx T
b0 @
b0 D
b0 G
0&
bx )
bx 7
bx K
bx S
bx ^
bx *
bx 9
bx _
bx .
bx R
bx b
bx =
bx C
bx <
bx B
bx ;
bx F
bx \
bx [
bx Z
b1 ,
b1 U
b1 Y
bx (
bx M
bx a
b0 +
b0 N
b0 V
b0 W
1!
#215
0!
#220
1!
#225
0!
#230
1!
